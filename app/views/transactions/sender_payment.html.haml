- content_for :title_header do
  %h1 Payment Receipt

#edit_payment_form_container.centered-section
  %p(id="notice")
    = notice

  %p
    %strong Recipient Email:
    = @payment.recipient_email

  %p
    %strong PayPal Payment ID:
    #payment_paypal_id= @payment.paypal_id
    %input(id="payment_id" type="hidden" value="#{@payment.id}")

  = form_for @payment do |f|
    = f.hidden_field :payer_id

  #paypal-button

  = link_to 'Edit', edit_person_transaction_sender_payment_path(@payment, transaction_id: params[:id], person_id: params[:person_id])
  |
  = link_to 'Back', :back

  - if @payment.created?
    %script(src="https://www.paypalobjects.com/api/checkout.js")
    :javascript
      paypal.Button.render({

          env: 'sandbox', // Specify 'sandbox' for the test environment

          client: {
              sandbox:    'AW9I0L0H92j2HRoZkke1OkbsdSdbsumfvvlimra6gM6JmlBIy6bepSPEi608J5uo62ICDrABRKsCp5Qw',
              production: 'xxxxxxxxx'
          },

          payment: function() {
            return new Promise( function(resolve, reject) { resolve($('#payment_paypal_id').text()) } );
          },

          commit: true,

          onAuthorize: function(data, actions) {
              $('#sender_payment_payer_id').val(data.payerID)

              $.ajax({
                url: '/sender_payments/' + $('#payment_id').val() + '.json',
                method: 'put',
                dataType: 'json',
                data: $('.edit_sender_payment').serialize()
              }).done(function(data) {
                //console.log(data);
                //TODO redirect to next page
                
              });
              //TODO handle error condition
         }

      }, '#paypal-button');
